[metadata]
name = gridaurora
version = 1.2.2
author = Michael Hirsch, Ph.D.
description = Gridding for auroral and ionospheric modeling
url = https://github.com/scivision/gridaurora
keywords =
  aeronomy
  aurora
  ionosphere
classifiers =
  Development Status :: 5 - Production/Stable
  Environment :: Console
  Intended Audience :: Science/Research
  Operating System :: OS Independent
  Programming Language :: Python :: 3.6
  Programming Language :: Python :: 3.7
  Topic :: Scientific/Engineering :: Atmospheric Science
license_file = LICENSE
long_description = file: README.md
long_description_content_type = text/markdown

[options]
python_requires = >= 3.6
setup_requires =
  setuptools >= 38.6
  pip >= 10
  twine >= 1.11
include_package_data = True
packages = find:
install_requires =
  python-dateutil
  h5py
  numpy
  scipy
  astropy
  xarray

[options.extras_require]
tests =
  pytest
  pytest-cov
  coveralls
  flake8
  mypy
plot =
  matplotlib
  seaborn
  pathvalidate
io =
  lowtran
  transcarread
models =
  reesaurora
  glowaurora
  lowtran

[options.entry_points]
console_scripts =
  AuroralProfile = AuroralProfile:main
  EllisonRamaty = EllisonRamaty_flux:main
  AuroralFluxGenerator = FluxGenerator:main
  MakeEigenprofileFluxInput = MakeEigenprofileFluxInput:main
  MakeIonoEigenprofile = MakeIonoEigenprofile:main
  PlotEmissionProfiles = PlotEmissionProfiles:main
  PlotFilteredSpectrum = PlotFilteredSpectrum:main

[flake8]
max-line-length = 132
exclude = .git,__pycache__,.eggs/,doc/,docs/,build/,dist/,archive/

[coverage:run]
cover_pylib = false
omit =
  /home/travis/virtualenv/*
  */site-packages/*
  */bin/*

[coverage:report]
exclude_lines =
  pragma: no cover
  def __repr__
  RuntimeError
  NotImplementedError
  ImportError
  KeyError
  FileNotFoundError
  CalledProcessError
  logging.warning
  ValueError
  TypeError

